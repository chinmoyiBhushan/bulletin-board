{"version":3,"sources":["Comment.js","Note.js","Board.js","reportWebVitals.js","index.js"],"names":["CommentForm","props","submitComment","bind","e","preventDefault","this","onNewComment","_newText","value","className","onSubmit","type","placeholder","ref","input","Component","Comment","remove","onRemove","index","children","onClick","Note","state","editing","done","commenting","comments","edit","save","toggleIsDone","toggleAddComment","renderForm","renderDisplay","generateCommentHtml","addNewComment","removeComment","setState","onChange","color","textDecoration","prevState","newComments","splice","comment","classNames","note","style","getStylesFor","id","checked","map","Board","notes","eachNote","add","update","nextId","text","uniqueId","newText","console","log","filter","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c2c900d.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nexport class CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.submitComment = this.submitComment.bind(this)\r\n    }\r\n\r\n    submitComment(e) {\r\n        e.preventDefault()\r\n        this.props.onNewComment(this._newText.value)\r\n        this._newText.value = ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"add-comment\" onSubmit={(this.submitComment)}>\r\n                <div className='add-comment-control'>\r\n                    <input type=\"text\" placeholder='Add Comment' ref={input => this._newText = input} />\r\n                </div>\r\n                <button className='submit' type=\"submit\">Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Comment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.remove = this.remove.bind(this)\r\n    }\r\n\r\n    remove(){\r\n        this.props.onRemove(this.props.index)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='comment'>\r\n                {this.props.children}\r\n                <button className='delete' onClick={this.remove}><FaTimes /></button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classNames from 'classnames'\r\nimport {CommentForm, Comment} from './Comment'\r\nimport {FaPencilAlt, FaTrash, FaSave, FaComment} from 'react-icons/fa'\r\n\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editing: false,\r\n            done: false,\r\n            commenting: false,\r\n            comments: [],\r\n        }\r\n        this.edit = this.edit.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.save = this.save.bind(this)\r\n        this.toggleIsDone = this.toggleIsDone.bind(this)\r\n        this.toggleAddComment = this.toggleAddComment.bind(this)\r\n        this.renderForm = this.renderForm.bind(this)\r\n        this.renderDisplay = this.renderDisplay.bind(this)\r\n        this.generateCommentHtml = this.generateCommentHtml.bind(this)\r\n        this.addNewComment = this.addNewComment.bind(this)\r\n        this.removeComment = this.removeComment.bind(this)\r\n    }\r\n    edit() {\r\n        this.setState({\r\n            editing: true,\r\n        })\r\n    }\r\n\r\n    remove() {\r\n        this.props.onRemove(this.props.index)\r\n    }\r\n\r\n    save(e) {\r\n        e.preventDefault()\r\n        this.props.onChange(this._newText.value, this.props.index)\r\n        this.setState({\r\n            editing: false,\r\n        })\r\n    }\r\n\r\n    toggleIsDone() {\r\n        this.setState({\r\n            done: !this.state.done,\r\n        })\r\n    }\r\n\r\n    getStylesFor(done) {\r\n        return done ? { color: 'green', textDecoration: 'line-through' } : {};\r\n    }\r\n\r\n    toggleAddComment() {\r\n        this.setState({\r\n            commenting: !this.state.commenting,\r\n        })\r\n    }\r\n    \r\n    removeComment(index) {\r\n        this.setState(prevState => {\r\n            const newComments = [...prevState.comments]\r\n            newComments.splice(index, 1)\r\n            return {comments: newComments}\r\n        })\r\n    }\r\n    \r\n    generateCommentHtml(comment, index) {\r\n        return (\r\n            <Comment key={index} index={index} onRemove={this.removeComment}>\r\n                {comment}\r\n            </Comment>\r\n        )\r\n    }\r\n\r\n    addNewComment(comment) {\r\n        this.setState(prevState => ({\r\n            comments: [\r\n                ...prevState.comments,\r\n                comment,\r\n            ],\r\n            commenting: false,\r\n        }))\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <div className={classNames({\r\n                note: true,\r\n                done: this.state.done,\r\n            })} style={this.getStylesFor(this.state.done)}>\r\n                <form onSubmit={this.save}>\r\n                    <textarea ref={input => this._newText = input} />\r\n                    <button id=\"save\"><FaSave /></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    renderDisplay() {\r\n        return (\r\n            <div className={classNames({\r\n                note: true,\r\n                done: this.state.done,\r\n            })} style={this.getStylesFor(this.state.done)}>\r\n                <p>{this.props.children}</p>\r\n                <div className='doneCheckBox'>\r\n                    <label>Done</label>\r\n                    <input type=\"checkbox\" checked={this.state.done} onChange={this.toggleIsDone} />\r\n                </div>\r\n                <aside className='actions'>\r\n                    <button onClick={this.toggleAddComment} id='comment'><FaComment /></button>\r\n                    <button onClick={this.edit} id='edit'><FaPencilAlt /></button>\r\n                    <button onClick={this.remove} id='remove'><FaTrash /></button>\r\n                </aside>\r\n                {this.state.commenting ? <CommentForm onNewComment={this.addNewComment} /> : ''}\r\n                {this.state.comments.map(this.generateCommentHtml)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return this.state.editing ? this.renderForm() : this.renderDisplay()\r\n    }\r\n}\r\n\r\nexport default Note\r\n","import React, {Component} from 'react'\r\nimport Note from './Note'\r\nimport {FaPlus} from 'react-icons/fa'\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            notes: [],\r\n        }\r\n        this.eachNote = this.eachNote.bind(this)\r\n        this.add = this.add.bind(this)\r\n        this.update = this.update.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.nextId = this.nextId.bind(this)\r\n    }\r\n\r\n    add(text) {\r\n        this.setState(prevState => ({\r\n            notes: [\r\n                ...prevState.notes,\r\n                {\r\n                    id: this.nextId(),\r\n                    note: text\r\n                },\r\n            ]\r\n        }))\r\n    }\r\n\r\n    nextId() {\r\n        this.uniqueId = this.uniqueId || 0\r\n        return this.uniqueId++\r\n    }\r\n\r\n    update(newText, id) {\r\n        console.log('updating item at index', id, newText)\r\n        this.setState(prevState => ({\r\n            notes: prevState.notes.map(\r\n                note => (note.id !== id) ? note : { ...note, note: newText }\r\n            )\r\n        }))\r\n    }\r\n\r\n    remove(id) {\r\n        this.setState(prevState => ({\r\n            notes: prevState.notes.filter(\r\n                note => note.id !== id\r\n            )\r\n        }))\r\n    }\r\n\r\n    eachNote(note, id) {\r\n        return (\r\n            <Note key={note.id} index={note.id}\r\n                onChange={this.update} onRemove={this.remove}>\r\n                {note.note}\r\n            </Note>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='board'>\r\n                {this.state.notes.map(this.eachNote)}\r\n                <button onClick={this.add.bind(null, \"New Note\")} id=\"add\" title=\"Add New Note\"><FaPlus /></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './Board';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}